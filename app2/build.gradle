apply plugin: 'com.android.application'

def getDate(){
    def date = new Date()
    def formatteDate = date.format("yyyyMMddHHmm")
    return formatteDate
}

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.demo.autobuildtest"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode APP_VERCODE as int
        versionName APP_VERSION
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs{
        releaseConfig{
            //本地打包使用本地本机的KeyStore
            //Jenkins打包用的是服务器上的KeyStore
            storeFile file(RELEASE_STORE_FILE)
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            storePassword RELEASE_STORE_FILE_PASSWORD
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
        debug{

        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {output ->
            //新名字
            def newName
            //时间戳
            def timeNow
            //输出文件夹
            //是否为Jenkins打包，输出路径不同
            if("true".equals(IS_JENKINS)){
                //Jenkins打包输出到服务器路径
                timeNow = getDate()
                //BUILD_PATH为服务器输出路径
                variant.getPackageApplication().outputDirectory = file(BUILD_PATH)
                //名字AutoBuild-v1.0.1-release.apk
                newName = "${BUILD_APP_NAME}-v" + APP_VERSION + "-" + variant.buildType.name + "2.apk"
            }else {
                //本地打包输出在本地路径
                timeNow = getDate()
                variant.getPackageApplication().outputDirectory = file(output.outputFile.getParent() + File.separator + timeNow)
                if("debug".equals(variant.buildType.name)){
                    newName = "${BUILD_APP_NAME}-v${APP_VERSION}-debug.apk"
                }else {
                    newName = "${BUILD_APP_NAME}-v" + APP_VERSION + "-" + variant.buildType.name + "2.apk"
                }
            }
            outputFileName = newName
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
